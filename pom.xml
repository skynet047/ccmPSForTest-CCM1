<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>ccm</groupId>
	<artifactId>CCM1</artifactId>
	<packaging>war</packaging>
	<version>0.0.1-SNAPSHOT</version>
	<name>Vaadin Web Application</name>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<vaadin.version>6.8.2</vaadin.version>
		<gwt.version>2.4.0</gwt.version>
		<gwt.plugin.version>2.4.0</gwt.plugin.version>
	</properties>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<configuration>
						<source>1.5</source>
						<target>1.5</target>
					</configuration>
				</plugin>

				<!-- Compiles your custom GWT components with the GWT compiler -->
				<!-- A hosted mode browser for client-side widget debugging can be run 
					with the goal gwt:run after uncommenting the correct line below. A remote 
					debugger can then be connected to port 8998. Note that e.g. a Jetty server 
					should be running with the server side parts - use the goal jetty:run . -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>gwt-maven-plugin</artifactId>
					<version>${gwt.plugin.version}</version>
					<configuration>
						<!-- if you don't specify any modules, the plugin will find them -->
						<!-- <modules> <module>ccm.CCM1.gwt.ColorPickerWidgetSet</module> </modules> -->
						<webappDirectory>${project.build.directory}/${project.build.finalName}/VAADIN/widgetsets</webappDirectory>
						<!-- On Mac running Snow Leopard, add "-d32" -->
						<!-- This causes error messages (but build works) in phase "package": 
							two processes would use the same debug port -->
						<!--extraJvmArgs>-Xmx512M -Xss1024k -Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8998</extraJvmArgs -->
						<extraJvmArgs>-Xmx512M -Xss1024k</extraJvmArgs>
						<runTarget>CCM1</runTarget>
						<hostedWebapp>${project.build.directory}/${project.build.finalName}</hostedWebapp>
						<noServer>true</noServer>
						<port>8080</port>
						<compileReport>false</compileReport>
					</configuration>
					<executions>
						<execution>
							<goals>
								<goal>resources</goal>
								<goal>compile</goal>
							</goals>
						</execution>
					</executions>
					<dependencies>
						<dependency>
							<groupId>com.google.gwt</groupId>
							<artifactId>gwt-dev</artifactId>
							<version>${gwt.version}</version>
						</dependency>
						<dependency>
							<groupId>com.google.gwt</groupId>
							<artifactId>gwt-user</artifactId>
							<version>${gwt.version}</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>com.vaadin</groupId>
					<artifactId>vaadin-maven-plugin</artifactId>
					<version>1.0.2</version>
					<executions>
						<execution>
							<configuration>
								<!-- if you don't specify any modules, the plugin will find them -->
								<!-- <modules> <module>ccm.CCM1.gwt.ColorPickerWidgetSet</module> 
									</modules> -->
							</configuration>
							<goals>
								<goal>update-widgetset</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<!-- A simple Jetty test server at http://localhost:8080/CCM1 can be 
					launched with the Maven goal jetty:run and stopped with jetty:stop -->
				<plugin>
					<groupId>org.mortbay.jetty</groupId>
					<artifactId>maven-jetty-plugin</artifactId>
					<version>6.1.24</version>
					<configuration>
						<stopPort>9966</stopPort>
						<stopKey>CCM1</stopKey>
						<!-- Redeploy every x seconds if changes are detected, 0 for no automatic 
							redeployment -->
						<scanIntervalSeconds>0</scanIntervalSeconds>
						<!-- make sure Jetty also finds the widgetset -->
						<webAppConfig>
							<contextPath>/CCM1</contextPath>
							<baseResource implementation="org.mortbay.resource.ResourceCollection">
								<!-- Workaround for Maven/Jetty issue http://jira.codehaus.org/browse/JETTY-680 -->
								<!-- <resources>src/main/webapp,${project.build.directory}/${project.build.finalName}</resources> -->
								<resourcesAsCSV>src/main/webapp,${project.build.directory}/${project.build.finalName}</resourcesAsCSV>
							</baseResource>
						</webAppConfig>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<repositories>
		<repository>
			<id>vaadin-snapshots</id>
			<url>http://oss.sonatype.org/content/repositories/vaadin-snapshots/</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>vaadin-addons</id>
			<url>http://maven.vaadin.com/vaadin-addons</url>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>codehaus-snapshots</id>
			<url>http://nexus.codehaus.org/snapshots</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<releases>
				<enabled>false</enabled>
			</releases>
		</pluginRepository>
		<pluginRepository>
			<id>vaadin-snapshots</id>
			<url>http://oss.sonatype.org/content/repositories/vaadin-snapshots/</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<releases>
				<enabled>false</enabled>
			</releases>
		</pluginRepository>
	</pluginRepositories>

	<dependencies>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin</artifactId>
			<version>${vaadin.version}</version>
		</dependency>
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-user</artifactId>
			<version>${gwt.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-dev</artifactId>
			<version>${gwt.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>4.3.6.Final</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>4.3.2.Final</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate.common</groupId>
			<artifactId>hibernate-commons-annotations</artifactId>
			<version>4.0.1.Final</version>
			<classifier>tests</classifier>
		</dependency>
		<dependency>
			<groupId>org.hibernate.javax.persistence</groupId>
			<artifactId>hibernate-jpa-2.0-api</artifactId>
			<version>1.0.1.Final</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>4.3.6.Final</version>
		</dependency>
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>1.0.0.GA</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.6.4</version>
		</dependency>
		<dependency>
			<groupId>org.jboss.logging</groupId>
			<artifactId>jboss-logging</artifactId>
			<version>3.1.0.CR2</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.6.4</version>
		</dependency>
		<dependency>
			<groupId>com.microsoft.sqlserver</groupId>
			<artifactId>sqljdbc4</artifactId>
			<version>4.0</version>
		</dependency>
	</dependencies>

</project>
